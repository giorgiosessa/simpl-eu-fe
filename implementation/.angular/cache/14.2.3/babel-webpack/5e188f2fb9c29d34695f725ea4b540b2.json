{"ast":null,"code":"import { FormControl, Validators } from '@angular/forms';\nimport { FileValidator } from '../file-validator';\nimport { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@services/api.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@services/form-field.service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/button\";\nimport * as i7 from \"@angular/material/form-field\";\nimport * as i8 from \"@ngx-translate/core\";\n\nfunction FileUploadComponent_mat_error_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, \"file-upload.typeError\"));\n  }\n}\n\nfunction FileUploadComponent_mat_error_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\")(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"br\");\n    i0.ɵɵelementStart(5, \"span\");\n    i0.ɵɵtext(6);\n    i0.ɵɵpipe(7, \"translate\");\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(3, 2, \"file-upload.processError\"));\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(7, 4, \"file-upload.try\"));\n  }\n}\n\nexport let FileUploadComponent = /*#__PURE__*/(() => {\n  class FileUploadComponent {\n    constructor(apiService, formBuilder, router, formfieldService) {\n      this.apiService = apiService;\n      this.formBuilder = formBuilder;\n      this.router = router;\n      this.formfieldService = formfieldService;\n      this.notify = new EventEmitter();\n      this.file = null;\n      this.allowedExtensions = ['ttl'];\n      this.form = this.formBuilder.group({\n        file: new FormControl('', [Validators.required, FileValidator.fileExtensions(this.allowedExtensions)]),\n        fileSource: new FormControl('', [Validators.required, FileValidator.fileExtensions(this.allowedExtensions)])\n      });\n    }\n\n    get f() {\n      return this.form.controls;\n    }\n\n    ngOnInit() {}\n\n    onFileChange(event) {\n      if (event.target.files.length > 0) {\n        const file = event.target.files[0];\n        this.form.patchValue({\n          fileSource: file\n        });\n      }\n    }\n\n    onSubmit() {\n      this.subscription = this.apiService.upload(this.form.get('fileSource').value).subscribe(res => {\n        this.shaclFile = this.formfieldService.readShaclFile(res);\n        console.log(this.shaclFile);\n        this.filteredShapes = this.formfieldService.updateFilteredShapes(this.shaclFile);\n\n        if (this.filteredShapes.length > 1) {\n          this.router.navigate(['/select-shape'], {\n            state: {\n              file: this.shaclFile\n            }\n          });\n        } else {\n          this.updateSelectedShape();\n          this.router.navigate(['/select-shape'], {\n            state: {\n              file: this.shaclFile\n            }\n          });\n        }\n      }, err => this.requestError = true); //this.modal.close('upload-modal');    \n      //console.log(\"Call closing statement here\");\n\n      this.notify.emit(true);\n    }\n\n    updateSelectedShape() {\n      const shape = this.filteredShapes[0];\n\n      if (shape !== undefined) {\n        this.shaclFile.shapes.find(x => x.name === shape.name).selected = true;\n      }\n    }\n\n  }\n\n  FileUploadComponent.ɵfac = function FileUploadComponent_Factory(t) {\n    return new (t || FileUploadComponent)(i0.ɵɵdirectiveInject(i1.ApiService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.FormfieldControlService));\n  };\n\n  FileUploadComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FileUploadComponent,\n    selectors: [[\"app-file-upload\"]],\n    inputs: {\n      closeModal: \"closeModal\"\n    },\n    outputs: {\n      notify: \"notify\"\n    },\n    decls: 8,\n    vars: 4,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"wrapper\"], [1, \"file-upload\"], [\"accept\", \".ttl\", \"formControlName\", \"file\", \"id\", \"file\", \"type\", \"file\", 1, \"form-control\", 3, \"change\"], [\"color\", \"primary\", \"mat-raised-button\", \"\", 1, \"upload-button\", 3, \"disabled\"], [4, \"ngIf\"]],\n    template: function FileUploadComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function FileUploadComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(1, \"div\", 1)(2, \"div\", 2)(3, \"input\", 3);\n        i0.ɵɵlistener(\"change\", function FileUploadComponent_Template_input_change_3_listener($event) {\n          return ctx.onFileChange($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"button\", 4);\n        i0.ɵɵtext(5, \"Upload\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(6, FileUploadComponent_mat_error_6_Template, 3, 3, \"mat-error\", 5);\n        i0.ɵɵtemplate(7, FileUploadComponent_mat_error_7_Template, 8, 6, \"mat-error\", 5);\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"disabled\", ctx.form.invalid);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.f.fileSource.errors == null ? null : ctx.f.fileSource.errors.fileExtension);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.requestError);\n      }\n    },\n    dependencies: [i5.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i6.MatButton, i7.MatError, i2.FormGroupDirective, i2.FormControlName, i8.TranslatePipe],\n    styles: [\"body[_ngcontent-%COMP%]{margin:0;padding:50px 0;font-family:sans-serif;background-color:#cdd9ed85}.wrapper[_ngcontent-%COMP%]{max-width:400px;display:flex;align-items:center;justify-content:center;margin:30px auto 0}.wrapper[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{margin:0;line-height:normal;padding:0 0 20px;font-size:18px;font-family:sans-serif}.file-upload[_ngcontent-%COMP%]{display:flex;flex-direction:column;justify-content:center;align-items:center;padding:18px 0;border-radius:8px;margin-bottom:15px}.title[_ngcontent-%COMP%]{font-weight:700}.upload-button[_ngcontent-%COMP%]{margin-top:2em;padding:.5rem 3rem;border-radius:10rem;box-shadow:0 4px 4px 1px #00000040!important;border:2px solid #673AB7!important;display:flex;border:none;justify-content:center;align-items:center;font-weight:700;font-size:1.2em}.form-control[_ngcontent-%COMP%]   input[type=file i][_ngcontent-%COMP%]{background-color:#04aa6d;border:none;color:#fff;padding:16px 32px;text-decoration:none;margin:4px 2px;cursor:pointer}#file[_ngcontent-%COMP%]{margin:0 auto;display:flex;flex-direction:column}\"]\n  });\n  return FileUploadComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}