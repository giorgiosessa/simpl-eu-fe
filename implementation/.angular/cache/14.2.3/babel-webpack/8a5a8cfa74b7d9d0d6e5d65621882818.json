{"ast":null,"code":"import { Component, HostBinding, Input, NgModule } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { CommonModule } from '@angular/common';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/platform-browser';\nlet NgxJsonLdComponent = /*#__PURE__*/(() => {\n  class NgxJsonLdComponent {\n    /**\n     * @param {?} sanitizer\n     */\n    constructor(sanitizer) {\n      this.sanitizer = sanitizer;\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n\n\n    ngOnChanges(changes) {\n      this.jsonLD = this.getSafeHTML(changes[\"json\"].currentValue);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n\n\n    getSafeHTML(value) {\n      const\n      /** @type {?} */\n      json = value ? JSON.stringify(value, null, 2).replace(/<\\/script>/g, '<\\\\/script>') : '';\n      const\n      /** @type {?} */\n      html = `<script type=\"application/ld+json\">${json}</script>`;\n      return this.sanitizer.bypassSecurityTrustHtml(html);\n    }\n\n  }\n\n  NgxJsonLdComponent.ɵfac = function NgxJsonLdComponent_Factory(t) {\n    return new (t || NgxJsonLdComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DomSanitizer));\n  };\n\n  NgxJsonLdComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NgxJsonLdComponent,\n    selectors: [[\"ngx-json-ld\"]],\n    hostVars: 1,\n    hostBindings: function NgxJsonLdComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"innerHTML\", ctx.jsonLD, ɵngcc0.ɵɵsanitizeHtml);\n      }\n    },\n    inputs: {\n      json: \"json\"\n    },\n    features: [ɵngcc0.ɵɵNgOnChangesFeature],\n    decls: 0,\n    vars: 0,\n    template: function NgxJsonLdComponent_Template(rf, ctx) {},\n    encapsulation: 2\n  });\n  /** @nocollapse */\n\n  return NgxJsonLdComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nlet NgxJsonLdModule = /*#__PURE__*/(() => {\n  class NgxJsonLdModule {}\n\n  NgxJsonLdModule.ɵfac = function NgxJsonLdModule_Factory(t) {\n    return new (t || NgxJsonLdModule)();\n  };\n\n  NgxJsonLdModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: NgxJsonLdModule\n  });\n  NgxJsonLdModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [CommonModule]\n  });\n  /** @nocollapse */\n\n  return NgxJsonLdModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgxJsonLdModule, {\n    declarations: function () {\n      return [NgxJsonLdComponent];\n    },\n    imports: function () {\n      return [CommonModule];\n    },\n    exports: function () {\n      return [NgxJsonLdComponent];\n    }\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NgxJsonLdModule, NgxJsonLdComponent as ɵa }; //# sourceMappingURL=ngx-json-ld.js.map","map":null,"metadata":{},"sourceType":"module"}