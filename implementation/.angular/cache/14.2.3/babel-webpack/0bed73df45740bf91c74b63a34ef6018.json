{"ast":null,"code":"import { FormGroup } from '@angular/forms';\nimport { Utils } from '@shared/utils';\nimport { FormField } from '@models/form-field.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@services/form-field.service\";\n\nfunction ExpandedFieldsComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 4)(1, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function ExpandedFieldsComponent_div_2_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.addInitialShape());\n    });\n    i0.ɵɵelementStart(2, \"mat-icon\");\n    i0.ɵɵtext(3, \"add\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", !ctx_r0.enableButton);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.input.name, \" \");\n  }\n}\n\nfunction ExpandedFieldsComponent_mat_accordion_3_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 13);\n  }\n}\n\nfunction ExpandedFieldsComponent_mat_accordion_3_mat_error_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" The shape does not exist in the file. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ExpandedFieldsComponent_mat_accordion_3_div_8_app_dynamic_form_input_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-dynamic-form-input\", 16);\n  }\n\n  if (rf & 2) {\n    const child_r11 = i0.ɵɵnextContext().$implicit;\n    const nestedShapeForm_r4 = i0.ɵɵnextContext().$implicit;\n    const ctx_r12 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"form\", nestedShapeForm_r4)(\"input\", child_r11)(\"shapes\", ctx_r12.shapes);\n  }\n}\n\nfunction ExpandedFieldsComponent_mat_accordion_3_div_8_app_dynamic_form_array_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-dynamic-form-array\", 16);\n  }\n\n  if (rf & 2) {\n    const child_r11 = i0.ɵɵnextContext().$implicit;\n    const nestedShapeForm_r4 = i0.ɵɵnextContext().$implicit;\n    const ctx_r13 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"form\", nestedShapeForm_r4)(\"input\", child_r11)(\"shapes\", ctx_r13.shapes);\n  }\n}\n\nfunction ExpandedFieldsComponent_mat_accordion_3_div_8_app_dynamic_form_or_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-dynamic-form-or\", 16);\n  }\n\n  if (rf & 2) {\n    const child_r11 = i0.ɵɵnextContext().$implicit;\n    const nestedShapeForm_r4 = i0.ɵɵnextContext().$implicit;\n    const ctx_r14 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"form\", nestedShapeForm_r4)(\"input\", child_r11)(\"shapes\", ctx_r14.shapes);\n  }\n}\n\nfunction ExpandedFieldsComponent_mat_accordion_3_div_8_app_dynamic_form_or_array_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-dynamic-form-or-array\", 16);\n  }\n\n  if (rf & 2) {\n    const child_r11 = i0.ɵɵnextContext().$implicit;\n    const nestedShapeForm_r4 = i0.ɵɵnextContext().$implicit;\n    const ctx_r15 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"form\", nestedShapeForm_r4)(\"input\", child_r11)(\"shapes\", ctx_r15.shapes);\n  }\n}\n\nfunction ExpandedFieldsComponent_mat_accordion_3_div_8_app_expanded_fields_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-expanded-fields\", 17);\n  }\n\n  if (rf & 2) {\n    const child_r11 = i0.ɵɵnextContext().$implicit;\n    const nestedShapeForm_r4 = i0.ɵɵnextContext().$implicit;\n    const ctx_r16 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"form\", nestedShapeForm_r4)(\"input\", child_r11)(\"parentId\", ctx_r16.input.id)(\"shapes\", ctx_r16.shapes);\n  }\n}\n\nfunction ExpandedFieldsComponent_mat_accordion_3_div_8_app_dynamic_self_loops_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-dynamic-self-loops\", 17);\n  }\n\n  if (rf & 2) {\n    const child_r11 = i0.ɵɵnextContext().$implicit;\n    const nestedShapeForm_r4 = i0.ɵɵnextContext().$implicit;\n    const ctx_r17 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"form\", nestedShapeForm_r4)(\"input\", child_r11)(\"parentId\", ctx_r17.input.id)(\"shapes\", ctx_r17.shapes);\n  }\n}\n\nfunction ExpandedFieldsComponent_mat_accordion_3_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, ExpandedFieldsComponent_mat_accordion_3_div_8_app_dynamic_form_input_1_Template, 1, 3, \"app-dynamic-form-input\", 14);\n    i0.ɵɵtemplate(2, ExpandedFieldsComponent_mat_accordion_3_div_8_app_dynamic_form_array_2_Template, 1, 3, \"app-dynamic-form-array\", 14);\n    i0.ɵɵtemplate(3, ExpandedFieldsComponent_mat_accordion_3_div_8_app_dynamic_form_or_3_Template, 1, 3, \"app-dynamic-form-or\", 14);\n    i0.ɵɵtemplate(4, ExpandedFieldsComponent_mat_accordion_3_div_8_app_dynamic_form_or_array_4_Template, 1, 3, \"app-dynamic-form-or-array\", 14);\n    i0.ɵɵtemplate(5, ExpandedFieldsComponent_mat_accordion_3_div_8_app_expanded_fields_5_Template, 1, 4, \"app-expanded-fields\", 15);\n    i0.ɵɵtemplate(6, ExpandedFieldsComponent_mat_accordion_3_div_8_app_dynamic_self_loops_6_Template, 1, 4, \"app-dynamic-self-loops\", 15);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const child_r11 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", child_r11.componentType == \"dynamicFormInput\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", child_r11.componentType == \"dynamicFormArray\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", child_r11.componentType == \"dynamicFormOr\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", child_r11.componentType == \"dynamicFormOrArray\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", child_r11.componentType == \"dynamicExpanded\" && !child_r11.selfLoop);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", child_r11.selfLoop);\n  }\n}\n\nfunction ExpandedFieldsComponent_mat_accordion_3_button_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r31 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function ExpandedFieldsComponent_mat_accordion_3_button_13_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r31);\n      const ctx_r30 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r30.addInput());\n    });\n    i0.ɵɵelementStart(1, \"mat-icon\");\n    i0.ɵɵtext(2, \"add\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"disabled\", !ctx_r9.enableButton);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r9.input.name, \" \");\n  }\n}\n\nfunction ExpandedFieldsComponent_mat_accordion_3_button_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r34 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 18);\n    i0.ɵɵlistener(\"click\", function ExpandedFieldsComponent_mat_accordion_3_button_14_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r34);\n      const i_r5 = i0.ɵɵnextContext().index;\n      const ctx_r32 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r32.deleteInput(i_r5));\n    });\n    i0.ɵɵelementStart(1, \"mat-icon\");\n    i0.ɵɵtext(2, \"delete icon\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction ExpandedFieldsComponent_mat_accordion_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r36 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-accordion\")(1, \"mat-expansion-panel\", 6);\n    i0.ɵɵlistener(\"closed\", function ExpandedFieldsComponent_mat_accordion_3_Template_mat_expansion_panel_closed_1_listener() {\n      i0.ɵɵrestoreView(_r36);\n      const ctx_r35 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r35.panelOpenState = false);\n    })(\"opened\", function ExpandedFieldsComponent_mat_accordion_3_Template_mat_expansion_panel_opened_1_listener() {\n      i0.ɵɵrestoreView(_r36);\n      const ctx_r37 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r37.panelOpenState = true);\n    });\n    i0.ɵɵelementStart(2, \"mat-expansion-panel-header\")(3, \"mat-panel-title\");\n    i0.ɵɵtext(4);\n    i0.ɵɵtemplate(5, ExpandedFieldsComponent_mat_accordion_3_span_5_Template, 1, 0, \"span\", 7);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\", 1);\n    i0.ɵɵtemplate(7, ExpandedFieldsComponent_mat_accordion_3_mat_error_7_Template, 2, 0, \"mat-error\", 8);\n    i0.ɵɵtemplate(8, ExpandedFieldsComponent_mat_accordion_3_div_8_Template, 7, 6, \"div\", 3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"div\", 4)(10, \"mat-error\");\n    i0.ɵɵelement(11, \"app-show-errors\", 9);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(12, \"div\", 10);\n    i0.ɵɵtemplate(13, ExpandedFieldsComponent_mat_accordion_3_button_13_Template, 4, 2, \"button\", 11);\n    i0.ɵɵtemplate(14, ExpandedFieldsComponent_mat_accordion_3_button_14_Template, 3, 0, \"button\", 12);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const nestedShapeForm_r4 = ctx.$implicit;\n    const i_r5 = ctx.index;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate2(\" \", ctx_r1.inputs[i_r5].name, \" - \", ctx_r1.inputs[i_r5].childrenSchema, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.input.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", nestedShapeForm_r4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.inputs[i_r5].childrenFields.length == 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.inputs[i_r5].childrenFields);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ctrl\", nestedShapeForm_r4)(\"label\", ctx_r1.input.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", i_r5 == 0 && ctx_r1.displayAddButton);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.displayDeleteButton(i_r5));\n  }\n}\n\nexport let ExpandedFieldsComponent = /*#__PURE__*/(() => {\n  class ExpandedFieldsComponent {\n    constructor(formFieldService) {\n      this.formFieldService = formFieldService;\n      this.input = new FormField();\n      this.form = new FormGroup({});\n      this.shapes = [];\n      this.parentId = null;\n      this.inputs = [];\n      this.panelOpenState = false;\n      this.groupsNumber = 1;\n      this.formGroups = [];\n      this.nestedFormGroup = new FormGroup({});\n      this.enableButton = true;\n      this.displayAddButton = true;\n    }\n\n    ngOnInit() {\n      var _a;\n\n      this.allformFields = (_a = this.shapes.find(shape => shape.selected)) === null || _a === void 0 ? void 0 : _a.fields;\n      this.displayAddButton = this.input.maxCount === undefined || this.input.maxCount > this.input.minCount;\n      this.groupFormFields(); // when the main shape is required then we add it to the main form, otherwise we remove it and display the add button.\n\n      if (this.input.required) {\n        this.inputs.push(this.input);\n\n        if (this.form.controls[this.input.id] !== undefined) {\n          this.formGroups.push(this.form.controls[this.input.id]);\n        } else {\n          // create form group\n          const newFormGroup = this.formFieldService.toGroup([this.input]); // add to the forms groups array\n\n          this.formGroups.push(newFormGroup[this.input.id]); // add to the main form\n\n          this.form.addControl(this.input.id, newFormGroup[this.input.id]);\n        }\n\n        for (let i = 0; i < this.input.minCount - 1; i++) {\n          this.addInput();\n        }\n      } else {\n        // remove the main input from the form\n        this.form.removeControl(this.input.id);\n      }\n    }\n\n    addInitialShape() {\n      // add to the list of inputs\n      this.inputs.push(this.input); // add to the list of all form fields\n\n      if (this.allformFields.find(x => x.id === this.input.id) === undefined) {\n        this.allformFields.push(this.input);\n      } // add to the forms groups array\n\n\n      let nestedForm;\n      nestedForm = this.formFieldService.toGroup(this.input.childrenFields, nestedForm);\n      const formGroup = new FormGroup(nestedForm);\n      this.formGroups.push(formGroup); // add to the main form\n\n      this.form.addControl(this.input.id, formGroup);\n    }\n\n    groupFormFields() {\n      this.groupedFormFields = Utils.groupBy(this.input.childrenFields, formField => formField.group);\n      this.groupsNumber = this.groupedFormFields.length;\n    }\n\n    addInput() {\n      const newInput = this.copyFormField(this.input);\n      this.inputs.push(newInput); // Depends whether it is from the first level (parentId == null) and self-loop or a higher level\n\n      if (this.parentId !== null) {\n        const field = this.findParentField(this.parentId, this.allformFields);\n        field.childrenFields.push(newInput);\n      } else {\n        this.allformFields.push(newInput);\n        let newFormGroup;\n\n        if (newInput.selfLoop) {\n          newFormGroup = this.formFieldService.selfLooptoGroup(newInput);\n        } else {\n          newFormGroup = this.formFieldService.toGroup([newInput]);\n        } // add to the forms groups array\n\n\n        this.formGroups.push(newFormGroup[newInput.id]); // add to the main form\n\n        this.form.addControl(newInput.id, newFormGroup[newInput.id]);\n      }\n\n      this.updateEnableButton();\n    }\n\n    deleteInput(index) {\n      // find input to be removed\n      const inputToBeRemoved = this.inputs[index]; // remove from the list of inputs iterated on this component\n\n      this.inputs.splice(index, 1); // remove from the list of all form fields\n\n      const indexInFormFields = this.allformFields.indexOf(inputToBeRemoved, 0);\n\n      if (index > -1) {\n        this.allformFields.splice(indexInFormFields, 1);\n      } // remove from the forms groups array\n\n\n      this.formGroups.splice(index, 1); // remove from the main form\n\n      this.form.removeControl(inputToBeRemoved.id);\n      this.updateEnableButton();\n    }\n\n    updateEnableButton() {\n      const maxCount = this.input.maxCount;\n\n      if (maxCount !== undefined) {\n        this.enableButton = this.formGroups.length < maxCount;\n      }\n    }\n\n    findParentField(id, formFields) {\n      let field = formFields.find(x => x.id === this.parentId);\n\n      if (field) {\n        return field;\n      } else {\n        const formFieldsFiltered = formFields.filter(x => Array.isArray(x.childrenFields) && x.childrenFields.length > 0);\n\n        for (let i = 0; i <= formFieldsFiltered.length; i++) {\n          field = this.findParentField(id, formFieldsFiltered[i].childrenFields);\n\n          if (field) {\n            return field;\n          }\n        }\n      }\n    }\n\n    copyFormField(formField, isMainShape = true) {\n      const newFormField = Object.assign({}, formField);\n      newFormField.id = Utils.getRandomValue();\n\n      if (isMainShape) {\n        newFormField.minCount = this.input.minCount - this.inputs.length;\n        newFormField.maxCount = this.input.maxCount - this.inputs.length;\n        newFormField.required = newFormField.minCount === 1 ? true : false;\n      }\n\n      if (newFormField.childrenSchema !== '') {\n        const newChildrenFields = [];\n        Utils.getDistinctObjects(newFormField.childrenFields).forEach(children => {\n          newChildrenFields.push(this.copyFormField(children, false));\n        });\n        newFormField.childrenFields = newChildrenFields;\n      }\n\n      return newFormField;\n    }\n\n    displayDeleteButton(i) {\n      if (!this.input.required) {\n        return true;\n      } else {\n        if (i !== 0 && i >= this.input.minCount) {\n          return true;\n        }\n\n        return false;\n      }\n    }\n\n  }\n\n  ExpandedFieldsComponent.ɵfac = function ExpandedFieldsComponent_Factory(t) {\n    return new (t || ExpandedFieldsComponent)(i0.ɵɵdirectiveInject(i1.FormfieldControlService));\n  };\n\n  ExpandedFieldsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ExpandedFieldsComponent,\n    selectors: [[\"app-expanded-fields\"]],\n    inputs: {\n      input: \"input\",\n      form: \"form\",\n      shapes: \"shapes\",\n      parentId: \"parentId\"\n    },\n    decls: 4,\n    vars: 3,\n    consts: [[1, \"expanded\"], [3, \"formGroup\"], [\"flex\", \"\", \"fxLayoutAlign\", \"start center\", \"layout\", \"row\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [\"flex\", \"\", \"fxLayoutAlign\", \"start center\", \"layout\", \"row\"], [\"color\", \"primary\", \"mat-icon-button\", \"\", 3, \"disabled\", \"click\"], [3, \"closed\", \"opened\"], [\"aria-required\", \"true\", \"class\", \"required\", 4, \"ngIf\"], [4, \"ngIf\"], [3, \"ctrl\", \"label\"], [\"fxLayout\", \"row\", \"fxLayoutAlign\", \"space-between center\"], [\"color\", \"primary\", \"mat-icon-button\", \"\", 3, \"disabled\", \"click\", 4, \"ngIf\"], [\"color\", \"warn\", \"mat-icon-button\", \"\", \"type\", \"button\", 3, \"click\", 4, \"ngIf\"], [\"aria-required\", \"true\", 1, \"required\"], [3, \"form\", \"input\", \"shapes\", 4, \"ngIf\"], [3, \"form\", \"input\", \"parentId\", \"shapes\", 4, \"ngIf\"], [3, \"form\", \"input\", \"shapes\"], [3, \"form\", \"input\", \"parentId\", \"shapes\"], [\"color\", \"warn\", \"mat-icon-button\", \"\", \"type\", \"button\", 3, \"click\"]],\n    template: function ExpandedFieldsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n        i0.ɵɵtemplate(2, ExpandedFieldsComponent_div_2_Template, 5, 2, \"div\", 2);\n        i0.ɵɵtemplate(3, ExpandedFieldsComponent_mat_accordion_3_Template, 15, 10, \"mat-accordion\", 3);\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.input.required && ctx.formGroups.length == 0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.formGroups);\n      }\n    },\n    styles: [\".expanded[_ngcontent-%COMP%]{padding-bottom:10px;padding-top:10px}.delete-button[_ngcontent-%COMP%]{margin-right:150px}\"]\n  });\n  return ExpandedFieldsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}