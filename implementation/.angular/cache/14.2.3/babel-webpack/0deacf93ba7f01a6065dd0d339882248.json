{"ast":null,"code":"// **N3StreamWriter** serializes a quad stream into a text stream.\nimport { Transform } from 'readable-stream';\nimport N3Writer from './N3Writer'; // ## Constructor\n\nexport default class N3StreamWriter extends Transform {\n  constructor(options) {\n    super({\n      encoding: 'utf8',\n      writableObjectMode: true\n    }); // Set up writer with a dummy stream object\n\n    const writer = this._writer = new N3Writer({\n      write: (quad, encoding, callback) => {\n        this.push(quad);\n        callback && callback();\n      },\n      end: callback => {\n        this.push(null);\n        callback && callback();\n      }\n    }, options); // Implement Transform methods on top of writer\n\n    this._transform = (quad, encoding, done) => {\n      writer.addQuad(quad, done);\n    };\n\n    this._flush = done => {\n      writer.end(done);\n    };\n  } // ### Serializes a stream of quads\n\n\n  import(stream) {\n    stream.on('data', quad => {\n      this.write(quad);\n    });\n    stream.on('end', () => {\n      this.end();\n    });\n    stream.on('error', error => {\n      this.emit('error', error);\n    });\n    stream.on('prefix', (prefix, iri) => {\n      this._writer.addPrefix(prefix, iri);\n    });\n    return this;\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}