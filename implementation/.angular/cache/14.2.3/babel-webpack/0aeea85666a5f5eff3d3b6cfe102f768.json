{"ast":null,"code":"export class FileValidator {\n  static fileMaxSize(maxSize) {\n    const validatorFn = file => {\n      if (file instanceof File && file.size > maxSize) {\n        return {\n          fileMinSize: {\n            requiredSize: maxSize,\n            actualSize: file.size,\n            file\n          }\n        };\n      }\n    };\n\n    return FileValidator.fileValidation(validatorFn);\n  }\n\n  static fileMinSize(minSize) {\n    const validatorFn = file => {\n      if (file instanceof File && file.size < minSize) {\n        return {\n          fileMinSize: {\n            requiredSize: minSize,\n            actualSize: file.size,\n            file\n          }\n        };\n      }\n    };\n\n    return FileValidator.fileValidation(validatorFn);\n  }\n  /**\n   * extensions must not contain dot\n   */\n\n\n  static fileExtensions(allowedExtensions) {\n    const validatorFn = file => {\n      if (allowedExtensions.length === 0) {\n        return null;\n      }\n\n      if (file instanceof File) {\n        const ext = FileValidator.getExtension(file.name);\n\n        if (allowedExtensions.indexOf(ext) === -1) {\n          return {\n            fileExtension: {\n              allowedExtensions,\n              actualExtension: file.type,\n              file\n            }\n          };\n        }\n      }\n    };\n\n    return FileValidator.fileValidation(validatorFn);\n  }\n\n  static getExtension(filename) {\n    if (filename.indexOf('.') === -1) {\n      return null;\n    }\n\n    return filename.split('.').pop();\n  }\n\n  static fileValidation(validatorFn) {\n    return formControl => {\n      if (!formControl.value) {\n        return null;\n      }\n\n      const files = [];\n      const isMultiple = Array.isArray(formControl.value);\n      isMultiple ? formControl.value.forEach(file => files.push(file)) : files.push(formControl.value);\n\n      for (const file of files) {\n        return validatorFn(file);\n      }\n\n      return null;\n    };\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}