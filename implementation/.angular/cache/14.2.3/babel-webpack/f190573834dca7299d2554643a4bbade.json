{"ast":null,"code":"import { ShaclFile } from '@models/shacl-file';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@services/form-field.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/icon\";\nimport * as i5 from \"@angular/material/button\";\nimport * as i6 from \"@angular/material/card\";\nimport * as i7 from \"@angular/material/form-field\";\nimport * as i8 from \"@angular/material/tooltip\";\nimport * as i9 from \"@angular/flex-layout/flex\";\nimport * as i10 from \"@ngx-translate/core\";\n\nfunction SelectShapeComponent_div_0_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 5)(1, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function SelectShapeComponent_div_0_div_11_Template_button_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const shape_r3 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r4.navigate(shape_r3.schema));\n    });\n    i0.ɵɵelementStart(2, \"mat-icon\");\n    i0.ɵɵtext(3, \"library_add\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const shape_r3 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"matTooltip\", shape_r3.toolTipText);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", shape_r3.name, \"\");\n  }\n}\n\nfunction SelectShapeComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"mat-card\", 2)(2, \"p\");\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementStart(5, \"b\");\n    i0.ɵɵtext(6);\n    i0.ɵɵpipe(7, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8);\n    i0.ɵɵpipe(9, \"translate\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(10, \"div\", 3);\n    i0.ɵɵtemplate(11, SelectShapeComponent_div_0_div_11_Template, 5, 2, \"div\", 4);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(4, 4, \"select-shape.multiError\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(7, 6, \"select-shape.multiError2\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind1(9, 8, \"select-shape.multiError3\"), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.shapes);\n  }\n}\n\nfunction SelectShapeComponent_mat_error_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, \"select-shape.error\"));\n  }\n}\n\nexport let SelectShapeComponent = /*#__PURE__*/(() => {\n  class SelectShapeComponent {\n    constructor(router, formfieldService) {\n      this.router = router;\n      this.formfieldService = formfieldService;\n      this.requestSuccess = false;\n      this.file = new ShaclFile();\n      this.fromBackLink = false;\n      this.readObjectDataFromRoute();\n\n      if (this.requestSuccess) {\n        this.shapes = this.formfieldService.updateFilteredShapes(this.file);\n        console.log(this.shapes);\n      }\n    }\n\n    ngOnInit() {}\n\n    readObjectDataFromRoute() {\n      if (this.router.getCurrentNavigation().extras.state) {\n        this.routeState = this.router.getCurrentNavigation().extras.state;\n\n        if (this.routeState) {\n          this.file = this.routeState.file;\n          this.requestSuccess = true;\n        }\n      }\n    }\n\n    navigate(schema) {\n      const shape = this.shapes.find(x => x.schema === schema);\n      this.file.shapes.find(x => x.schema === shape.schema).selected = true;\n      this.router.navigate(['/form'], {\n        state: {\n          file: this.file\n        }\n      });\n    }\n\n  }\n\n  SelectShapeComponent.ɵfac = function SelectShapeComponent_Factory(t) {\n    return new (t || SelectShapeComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.FormfieldControlService));\n  };\n\n  SelectShapeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SelectShapeComponent,\n    selectors: [[\"app-select-shape\"]],\n    decls: 3,\n    vars: 2,\n    consts: [[4, \"ngIf\"], [1, \"error-request\"], [1, \"info-message\"], [\"fxLayout\", \"row wrap\", \"fxLayoutGap\", \"16px grid\"], [\"fxFlex\", \"20%\", \"fxFlex.sm\", \"20%\", \"fxFlex.xs\", \"100%\", 4, \"ngFor\", \"ngForOf\"], [\"fxFlex\", \"20%\", \"fxFlex.sm\", \"20%\", \"fxFlex.xs\", \"100%\"], [\"color\", \"primary\", \"mat-stroked-button\", \"\", 1, \"shape\", 3, \"matTooltip\", \"click\"]],\n    template: function SelectShapeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, SelectShapeComponent_div_0_Template, 12, 10, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵtemplate(2, SelectShapeComponent_mat_error_2_Template, 3, 3, \"mat-error\", 0);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.requestSuccess);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", !ctx.requestSuccess);\n      }\n    },\n    dependencies: [i3.NgForOf, i3.NgIf, i4.MatIcon, i5.MatButton, i6.MatCard, i7.MatError, i8.MatTooltip, i9.DefaultLayoutDirective, i9.DefaultLayoutGapDirective, i9.DefaultFlexDirective, i10.TranslatePipe],\n    styles: [\".info-message[_ngcontent-%COMP%]{max-width:800px;margin:2em auto;text-align:center}.shape[_ngcontent-%COMP%]{width:200px;height:100px;margin-left:20px;font-size:16px}.error-request[_ngcontent-%COMP%]{text-align:center;margin-top:25px}\"]\n  });\n  return SelectShapeComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}