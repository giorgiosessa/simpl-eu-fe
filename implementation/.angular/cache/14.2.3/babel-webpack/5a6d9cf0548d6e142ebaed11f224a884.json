{"ast":null,"code":"import { FormGroup } from '@angular/forms';\nimport { FormField } from '@models/form-field.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@services/form-field.service\";\nimport * as i2 from \"@services/validation.service\";\n\nfunction DynamicFormInComponent_mat_form_field_1_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 8);\n  }\n}\n\nfunction DynamicFormInComponent_mat_form_field_1_mat_option_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r5.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r5.value, \" \");\n  }\n}\n\nfunction DynamicFormInComponent_mat_form_field_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-form-field\", 4)(1, \"mat-label\");\n    i0.ɵɵtext(2);\n    i0.ɵɵtemplate(3, DynamicFormInComponent_mat_form_field_1_span_3_Template, 1, 0, \"span\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"mat-select\", 6);\n    i0.ɵɵlistener(\"selectionChange\", function DynamicFormInComponent_mat_form_field_1_Template_mat_select_selectionChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.onSelectionChanged($event.value));\n    });\n    i0.ɵɵtemplate(5, DynamicFormInComponent_mat_form_field_1_mat_option_5_Template, 2, 2, \"mat-option\", 7);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r0.input.name, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.input.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formControlName\", ctx_r0.input.id)(\"multiple\", false);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.input.in);\n  }\n}\n\nfunction DynamicFormInComponent_mat_form_field_4_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 8);\n  }\n}\n\nfunction DynamicFormInComponent_mat_form_field_4_mat_option_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r10 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r10.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r10.value, \" \");\n  }\n}\n\nfunction DynamicFormInComponent_mat_form_field_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-form-field\", 4)(1, \"mat-label\");\n    i0.ɵɵtext(2);\n    i0.ɵɵtemplate(3, DynamicFormInComponent_mat_form_field_4_span_3_Template, 1, 0, \"span\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"mat-select\", 10);\n    i0.ɵɵlistener(\"selectionChange\", function DynamicFormInComponent_mat_form_field_4_Template_mat_select_selectionChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.onSelectionChanged($event.value));\n    });\n    i0.ɵɵtemplate(5, DynamicFormInComponent_mat_form_field_4_mat_option_5_Template, 2, 2, \"mat-option\", 7);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r1.input.name, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.input.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formControl\", ctx_r1.control)(\"multiple\", false);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.input.in);\n  }\n}\n\nfunction DynamicFormInComponent_div_7_app_dynamic_form_input_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-dynamic-form-input\", 12);\n  }\n\n  if (rf & 2) {\n    const field_r13 = i0.ɵɵnextContext().$implicit;\n    const ctx_r14 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"form\", ctx_r14.nestedFormGroup)(\"input\", field_r13)(\"shapes\", ctx_r14.shapes);\n  }\n}\n\nfunction DynamicFormInComponent_div_7_app_dynamic_form_array_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-dynamic-form-array\", 12);\n  }\n\n  if (rf & 2) {\n    const field_r13 = i0.ɵɵnextContext().$implicit;\n    const ctx_r15 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"form\", ctx_r15.nestedFormGroup)(\"input\", field_r13)(\"shapes\", ctx_r15.shapes);\n  }\n}\n\nfunction DynamicFormInComponent_div_7_app_dynamic_form_or_array_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-dynamic-form-or-array\", 12);\n  }\n\n  if (rf & 2) {\n    const field_r13 = i0.ɵɵnextContext().$implicit;\n    const ctx_r16 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"form\", ctx_r16.nestedFormGroup)(\"input\", field_r13)(\"shapes\", ctx_r16.shapes);\n  }\n}\n\nfunction DynamicFormInComponent_div_7_app_dynamic_form_or_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-dynamic-form-or\", 12);\n  }\n\n  if (rf & 2) {\n    const field_r13 = i0.ɵɵnextContext().$implicit;\n    const ctx_r17 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"form\", ctx_r17.nestedFormGroup)(\"input\", field_r13)(\"shapes\", ctx_r17.shapes);\n  }\n}\n\nfunction DynamicFormInComponent_div_7_app_expanded_fields_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-expanded-fields\", 12);\n  }\n\n  if (rf & 2) {\n    const field_r13 = i0.ɵɵnextContext().$implicit;\n    const ctx_r18 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"form\", ctx_r18.nestedFormGroup)(\"input\", field_r13)(\"shapes\", ctx_r18.shapes);\n  }\n}\n\nfunction DynamicFormInComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, DynamicFormInComponent_div_7_app_dynamic_form_input_1_Template, 1, 3, \"app-dynamic-form-input\", 11);\n    i0.ɵɵtemplate(2, DynamicFormInComponent_div_7_app_dynamic_form_array_2_Template, 1, 3, \"app-dynamic-form-array\", 11);\n    i0.ɵɵtemplate(3, DynamicFormInComponent_div_7_app_dynamic_form_or_array_3_Template, 1, 3, \"app-dynamic-form-or-array\", 11);\n    i0.ɵɵtemplate(4, DynamicFormInComponent_div_7_app_dynamic_form_or_4_Template, 1, 3, \"app-dynamic-form-or\", 11);\n    i0.ɵɵtemplate(5, DynamicFormInComponent_div_7_app_expanded_fields_5_Template, 1, 3, \"app-expanded-fields\", 11);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const field_r13 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", field_r13.componentType == \"dynamicFormInput\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", field_r13.componentType == \"dynamicFormArray\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", field_r13.componentType == \"dynamicFormOrArray\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", field_r13.componentType == \"dynamicFormOr\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", field_r13.componentType == \"dynamicExpanded\");\n  }\n}\n\nexport let DynamicFormInComponent = /*#__PURE__*/(() => {\n  class DynamicFormInComponent {\n    constructor(formfieldService, validationService) {\n      this.formfieldService = formfieldService;\n      this.validationService = validationService;\n      this.input = new FormField();\n      this.form = new FormGroup({});\n      this.shapes = [];\n      this.shapeFields = [];\n      this.nestedFormGroup = new FormGroup({});\n      this.isArray = false;\n    }\n\n    ngOnInit() {\n      this.isArray = this.control !== undefined;\n    }\n\n    onSelectionChanged(selectedValue) {\n      this.updateShapeFields(selectedValue);\n    }\n\n    updateShapeFields(selectedValue) {\n      this.form.removeControl(this.input.id); // Get shape fields from selected shape\n\n      const shape = this.shapes.find(x => x.name === selectedValue);\n      this.shapeFields = shape === null || shape === void 0 ? void 0 : shape.fields; // We append the children fields of the first shape from the or array of shapes\n\n      this.input.childrenSchema = shape.schema;\n      this.input.childrenFields = this.shapeFields; // Add the form group in the form array\n\n      let nestedForm;\n      nestedForm = this.formfieldService.toGroup(this.input.childrenFields, nestedForm);\n      const validator = this.validationService.getValidatorFn(this.input);\n      const nestedFormGroup = new FormGroup(nestedForm, validator);\n      this.form.addControl(this.input.id, nestedFormGroup);\n      this.nestedFormGroup = nestedFormGroup;\n    }\n\n  }\n\n  DynamicFormInComponent.ɵfac = function DynamicFormInComponent_Factory(t) {\n    return new (t || DynamicFormInComponent)(i0.ɵɵdirectiveInject(i1.FormfieldControlService), i0.ɵɵdirectiveInject(i2.ValidationControlService));\n  };\n\n  DynamicFormInComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DynamicFormInComponent,\n    selectors: [[\"app-dynamic-form-in\"]],\n    inputs: {\n      input: \"input\",\n      form: \"form\",\n      shapes: \"shapes\",\n      control: \"control\"\n    },\n    decls: 8,\n    vars: 8,\n    consts: [[3, \"formGroup\"], [\"class\", \"full-width-input\", 4, \"ngIf\"], [3, \"ctrl\", \"label\"], [4, \"ngFor\", \"ngForOf\"], [1, \"full-width-input\"], [\"aria-required\", \"true\", \"class\", \"required\", 4, \"ngIf\"], [3, \"formControlName\", \"multiple\", \"selectionChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"aria-required\", \"true\", 1, \"required\"], [3, \"value\"], [3, \"formControl\", \"multiple\", \"selectionChange\"], [3, \"form\", \"input\", \"shapes\", 4, \"ngIf\"], [3, \"form\", \"input\", \"shapes\"]],\n    template: function DynamicFormInComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵtemplate(1, DynamicFormInComponent_mat_form_field_1_Template, 6, 5, \"mat-form-field\", 1);\n        i0.ɵɵelementStart(2, \"mat-error\");\n        i0.ɵɵelement(3, \"app-show-errors\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(4, DynamicFormInComponent_mat_form_field_4_Template, 6, 5, \"mat-form-field\", 1);\n        i0.ɵɵelementStart(5, \"mat-error\");\n        i0.ɵɵelement(6, \"app-show-errors\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(7, DynamicFormInComponent_div_7_Template, 6, 5, \"div\", 3);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isArray);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ctrl\", ctx.form.get(ctx.input.id))(\"label\", ctx.input.name);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isArray);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ctrl\", ctx.control)(\"label\", ctx.input.name);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.shapeFields);\n      }\n    },\n    styles: [\".full-width-input[_ngcontent-%COMP%]{width:100%}.description[_ngcontent-%COMP%]{float:left}.description[_ngcontent-%COMP%]   .mat-icon[_ngcontent-%COMP%]{font-size:16px}\"]\n  });\n  return DynamicFormInComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}