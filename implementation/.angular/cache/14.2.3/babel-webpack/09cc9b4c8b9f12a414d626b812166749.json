{"ast":null,"code":"import { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngx-translate/core\";\nexport let I18nModule = /*#__PURE__*/(() => {\n  class I18nModule {\n    constructor(translate) {\n      translate.addLangs(['en', 'de']);\n      const browserLang = translate.getBrowserLang();\n      translate.use('en');\n    }\n\n  }\n\n  I18nModule.ɵfac = function I18nModule_Factory(t) {\n    return new (t || I18nModule)(i0.ɵɵinject(i1.TranslateService));\n  };\n\n  I18nModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: I18nModule\n  });\n  I18nModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    imports: [HttpClientModule, TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: translateLoaderFactory,\n        deps: [HttpClient]\n      }\n    }), TranslateModule]\n  });\n  return I18nModule;\n})();\nexport function translateLoaderFactory(httpClient) {\n  return new TranslateHttpLoader(httpClient);\n}","map":null,"metadata":{},"sourceType":"module"}