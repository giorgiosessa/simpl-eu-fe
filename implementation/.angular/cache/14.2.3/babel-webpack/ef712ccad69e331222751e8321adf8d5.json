{"ast":null,"code":"import { FormGroup } from '@angular/forms';\nimport { FormField } from '@models/form-field.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@services/form-field.service\";\nimport * as i2 from \"@services/validation.service\";\nimport * as i3 from \"@ngx-translate/core\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/material/datepicker\";\nimport * as i7 from \"@angular/material/form-field\";\nimport * as i8 from \"@angular/material/input\";\nimport * as i9 from \"@angular/material/select\";\nimport * as i10 from \"@angular/material/core\";\nimport * as i11 from \"@angular/material/checkbox\";\nimport * as i12 from \"@angular/material/tooltip\";\nimport * as i13 from \"@angular-material-components/datetime-picker\";\nimport * as i14 from \"../show-errors/show-errors.component\";\nimport * as i15 from \"@directives/numeric.directive\";\nimport * as i16 from \"../dynamic-form-in/dynamic-form-in.component\";\n\nfunction DynamicFormInputComponent_div_2_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 7);\n  }\n}\n\nfunction DynamicFormInputComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"mat-form-field\", 3)(2, \"mat-label\");\n    i0.ɵɵtext(3);\n    i0.ɵɵtemplate(4, DynamicFormInputComponent_div_2_span_4_Template, 1, 0, \"span\", 4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"input\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"mat-error\");\n    i0.ɵɵelement(7, \"app-show-errors\", 6);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r0.input.name, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.input.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"placeholder\", ctx_r0.input.description[ctx_r0.translate.currentLang]);\n    i0.ɵɵproperty(\"formControlName\", ctx_r0.input.id)(\"matTooltip\", ctx_r0.input.description[ctx_r0.translate.currentLang])(\"type\", ctx_r0.input.datatype);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ctrl\", ctx_r0.form.get(ctx_r0.input.id))(\"label\", ctx_r0.input.name);\n  }\n}\n\nfunction DynamicFormInputComponent_div_3_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 7);\n  }\n}\n\nfunction DynamicFormInputComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"mat-form-field\", 3)(2, \"mat-label\");\n    i0.ɵɵtext(3);\n    i0.ɵɵtemplate(4, DynamicFormInputComponent_div_3_span_4_Template, 1, 0, \"span\", 4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"input\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"mat-error\");\n    i0.ɵɵelement(7, \"app-show-errors\", 6);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r1.input.name, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.input.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"placeholder\", ctx_r1.input.description[ctx_r1.translate.currentLang]);\n    i0.ɵɵproperty(\"formControlName\", ctx_r1.input.id)(\"matTooltip\", ctx_r1.input.description[ctx_r1.translate.currentLang]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ctrl\", ctx_r1.form.get(ctx_r1.input.id))(\"label\", ctx_r1.input.name);\n  }\n}\n\nfunction DynamicFormInputComponent_div_4_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 7);\n  }\n}\n\nfunction DynamicFormInputComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"mat-form-field\", 3)(2, \"mat-label\");\n    i0.ɵɵtext(3);\n    i0.ɵɵtemplate(4, DynamicFormInputComponent_div_4_span_4_Template, 1, 0, \"span\", 4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"input\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"mat-error\");\n    i0.ɵɵelement(7, \"app-show-errors\", 6);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r2.input.name, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.input.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"placeholder\", ctx_r2.input.description[ctx_r2.translate.currentLang]);\n    i0.ɵɵproperty(\"formControlName\", ctx_r2.input.id)(\"matTooltip\", ctx_r2.input.description[ctx_r2.translate.currentLang]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ctrl\", ctx_r2.form.get(ctx_r2.input.id))(\"label\", ctx_r2.input.name);\n  }\n}\n\nfunction DynamicFormInputComponent_div_5_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 7);\n  }\n}\n\nfunction DynamicFormInputComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"mat-form-field\", 3)(2, \"mat-label\");\n    i0.ɵɵtext(3);\n    i0.ɵɵtemplate(4, DynamicFormInputComponent_div_5_span_4_Template, 1, 0, \"span\", 4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"input\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"mat-error\");\n    i0.ɵɵelement(7, \"app-show-errors\", 6);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r3.input.name, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.input.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"placeholder\", ctx_r3.input.description[ctx_r3.translate.currentLang]);\n    i0.ɵɵproperty(\"formControlName\", ctx_r3.input.id)(\"matTooltip\", ctx_r3.input.description[ctx_r3.translate.currentLang]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ctrl\", ctx_r3.form.get(ctx_r3.input.id))(\"label\", ctx_r3.input.name);\n  }\n}\n\nfunction DynamicFormInputComponent_div_6_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 7);\n  }\n}\n\nfunction DynamicFormInputComponent_div_6_mat_option_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r15 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r15.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r15.value, \" \");\n  }\n}\n\nfunction DynamicFormInputComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"mat-form-field\", 3)(2, \"mat-label\");\n    i0.ɵɵtext(3);\n    i0.ɵɵtemplate(4, DynamicFormInputComponent_div_6_span_4_Template, 1, 0, \"span\", 4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"mat-select\", 11);\n    i0.ɵɵtemplate(6, DynamicFormInputComponent_div_6_mat_option_6_Template, 2, 2, \"mat-option\", 12);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"mat-error\");\n    i0.ɵɵelement(8, \"app-show-errors\", 6);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r4.input.name, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.input.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formControlName\", ctx_r4.input.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.input.in);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ctrl\", ctx_r4.form.get(ctx_r4.input.id))(\"label\", ctx_r4.input.name);\n  }\n}\n\nfunction DynamicFormInputComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"app-dynamic-form-in\", 14);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"form\", ctx_r5.form)(\"input\", ctx_r5.input)(\"shapes\", ctx_r5.shapes);\n  }\n}\n\nfunction DynamicFormInputComponent_div_8_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 7);\n  }\n}\n\nfunction DynamicFormInputComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"mat-form-field\", 3)(2, \"mat-label\");\n    i0.ɵɵtext(3);\n    i0.ɵɵtemplate(4, DynamicFormInputComponent_div_8_span_4_Template, 1, 0, \"span\", 4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"input\", 15)(6, \"mat-datepicker-toggle\", 16)(7, \"mat-datepicker\", null, 17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"mat-error\");\n    i0.ɵɵelement(10, \"app-show-errors\", 6);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const _r17 = i0.ɵɵreference(8);\n\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r6.input.name, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.input.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formControlName\", ctx_r6.input.id)(\"matDatepicker\", _r17);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"for\", _r17);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ctrl\", ctx_r6.form.get(ctx_r6.input.id))(\"label\", ctx_r6.input.name);\n  }\n}\n\nfunction DynamicFormInputComponent_div_9_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 7);\n  }\n}\n\nfunction DynamicFormInputComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"mat-form-field\", 3)(2, \"mat-label\");\n    i0.ɵɵtext(3);\n    i0.ɵɵtemplate(4, DynamicFormInputComponent_div_9_span_4_Template, 1, 0, \"span\", 4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"input\", 18)(6, \"mat-datepicker-toggle\", 16)(7, \"ngx-mat-datetime-picker\", null, 17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"mat-error\");\n    i0.ɵɵelement(10, \"app-show-errors\", 6);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const _r19 = i0.ɵɵreference(8);\n\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r7.input.name, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.input.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formControlName\", ctx_r7.input.id)(\"ngxMatDatetimePicker\", _r19);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"for\", _r19);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ctrl\", ctx_r7.form.get(ctx_r7.input.id))(\"label\", ctx_r7.input.name);\n  }\n}\n\nfunction DynamicFormInputComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"mat-checkbox\", 19);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"mat-error\");\n    i0.ɵɵelement(4, \"app-show-errors\", 6);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formControlName\", ctx_r8.input.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r8.input.name, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ctrl\", ctx_r8.form.get(ctx_r8.input.id))(\"label\", ctx_r8.input.name);\n  }\n}\n\nexport let DynamicFormInputComponent = /*#__PURE__*/(() => {\n  class DynamicFormInputComponent {\n    constructor(formfieldService, validationService, translate) {\n      this.formfieldService = formfieldService;\n      this.validationService = validationService;\n      this.translate = translate;\n      this.input = new FormField();\n      this.form = new FormGroup({});\n      this.shapes = [];\n      this.selectShapeChildren = [];\n      this.selectShapeFormGroup = new FormGroup({});\n    }\n\n    get isValid() {\n      return this.form.controls[this.input.id].valid;\n    }\n\n    ngOnInit() {\n      if (this.input.datatype !== undefined && this.input.datatype.value === 'boolean') {\n        this.form.get(this.input.id).setValue(false);\n      }\n    }\n\n    onSelectionChanged(selectedValue) {\n      this.updateShapeFields(selectedValue);\n    }\n\n    updateShapeFields(selectedValue) {\n      this.form.removeControl(this.input.id); // Get shape fields from selected shape\n\n      const shape = this.shapes.find(x => x.name === selectedValue);\n      this.selectShapeChildren = shape === null || shape === void 0 ? void 0 : shape.fields; // We append the children fields of the first shape from the or array of shapes\n\n      this.input.childrenSchema = shape.schema;\n      this.input.childrenFields = this.selectShapeChildren; // Add the form group in the form array\n\n      let nestedForm;\n      nestedForm = this.formfieldService.toGroup(this.input.childrenFields, nestedForm);\n      const validator = this.validationService.getValidatorFn(this.input);\n      const nestedFormGroup = new FormGroup(nestedForm, validator);\n      this.form.addControl(this.input.id, nestedFormGroup);\n      this.selectShapeFormGroup = nestedFormGroup;\n    }\n\n  }\n\n  DynamicFormInputComponent.ɵfac = function DynamicFormInputComponent_Factory(t) {\n    return new (t || DynamicFormInputComponent)(i0.ɵɵdirectiveInject(i1.FormfieldControlService), i0.ɵɵdirectiveInject(i2.ValidationControlService), i0.ɵɵdirectiveInject(i3.TranslateService));\n  };\n\n  DynamicFormInputComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DynamicFormInputComponent,\n    selectors: [[\"app-dynamic-form-input\"]],\n    inputs: {\n      input: \"input\",\n      form: \"form\",\n      shapes: \"shapes\"\n    },\n    decls: 11,\n    vars: 11,\n    consts: [[3, \"formGroup\"], [3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [1, \"full-width-input\"], [\"aria-required\", \"true\", \"class\", \"required\", 4, \"ngIf\"], [\"matInput\", \"\", 3, \"formControlName\", \"matTooltip\", \"placeholder\", \"type\"], [3, \"ctrl\", \"label\"], [\"aria-required\", \"true\", 1, \"required\"], [\"appNumeric\", \"\", \"matInput\", \"\", \"type\", \"number\", 3, \"formControlName\", \"matTooltip\", \"placeholder\"], [\"appNumeric\", \"\", \"decimals\", \"2\", \"matInput\", \"\", \"type\", \"number\", 3, \"formControlName\", \"matTooltip\", \"placeholder\"], [\"matInput\", \"\", 3, \"formControlName\", \"matTooltip\", \"placeholder\"], [3, \"formControlName\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"], [3, \"form\", \"input\", \"shapes\"], [\"matInput\", \"\", 3, \"formControlName\", \"matDatepicker\"], [\"matSuffix\", \"\", 3, \"for\"], [\"picker\", \"\"], [\"matInput\", \"\", 3, \"formControlName\", \"ngxMatDatetimePicker\"], [1, \"checkbox-style\", 3, \"formControlName\"]],\n    template: function DynamicFormInputComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0)(1, \"div\", 1);\n        i0.ɵɵtemplate(2, DynamicFormInputComponent_div_2_Template, 8, 8, \"div\", 2);\n        i0.ɵɵtemplate(3, DynamicFormInputComponent_div_3_Template, 8, 7, \"div\", 2);\n        i0.ɵɵtemplate(4, DynamicFormInputComponent_div_4_Template, 8, 7, \"div\", 2);\n        i0.ɵɵtemplate(5, DynamicFormInputComponent_div_5_Template, 8, 7, \"div\", 2);\n        i0.ɵɵtemplate(6, DynamicFormInputComponent_div_6_Template, 9, 6, \"div\", 2);\n        i0.ɵɵtemplate(7, DynamicFormInputComponent_div_7_Template, 2, 3, \"div\", 2);\n        i0.ɵɵtemplate(8, DynamicFormInputComponent_div_8_Template, 11, 7, \"div\", 2);\n        i0.ɵɵtemplate(9, DynamicFormInputComponent_div_9_Template, 11, 7, \"div\", 2);\n        i0.ɵɵtemplate(10, DynamicFormInputComponent_div_10_Template, 5, 4, \"div\", 2);\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitch\", ctx.input.controlTypes[0]);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitchCase\", \"textbox\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitchCase\", \"textbox_integer\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitchCase\", \"textbox_decimal\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitchCase\", \"textbox_uri\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitchCase\", \"dropdown\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitchCase\", \"dropdown_object\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitchCase\", \"datepicker\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitchCase\", \"datetimepicker\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitchCase\", \"checkbox\");\n      }\n    },\n    dependencies: [i4.NgForOf, i4.NgIf, i4.NgSwitch, i4.NgSwitchCase, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NumberValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i6.MatDatepicker, i6.MatDatepickerInput, i6.MatDatepickerToggle, i7.MatError, i7.MatFormField, i7.MatLabel, i7.MatSuffix, i8.MatInput, i5.FormGroupDirective, i5.FormControlName, i9.MatSelect, i10.MatOption, i11.MatCheckbox, i12.MatTooltip, i13.NgxMatDatetimePicker, i13.NgxMatDatetimeInput, i14.ShowErrorsComponent, i15.NumericDirective, i16.DynamicFormInComponent],\n    styles: [\".full-width-input[_ngcontent-%COMP%]{width:100%}.description[_ngcontent-%COMP%]{float:left}.description[_ngcontent-%COMP%]   .mat-icon[_ngcontent-%COMP%]{font-size:16px}.checkbox-style[_ngcontent-%COMP%]{margin:0 12px}\"]\n  });\n  return DynamicFormInputComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}